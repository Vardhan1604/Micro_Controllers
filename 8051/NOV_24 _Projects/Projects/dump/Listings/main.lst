C51 COMPILER V9.60.7.0   MAIN                                                              11/24/2024 01:58:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>      // Include 8051 Register File
   2          #include <stdio.h>      // Include standard I/O for string conversion
   3          
   4          // LCD pins connected to 8051
   5          sbit RS = P0^0;   // Register Select pin
   6          sbit RW = P0^1;   // Read/Write pin
   7          sbit EN = P0^2;   // Enable pin
   8          
   9          // ADC pins connected to 8051 (e.g., P1 for ADC data, P3 for control)
  10          ///sbit ADC_CS = P3^4;  // Chip Select for ADC
  11          sbit ADC_WR = P3^3;  // Write Pin for ADC
  12          sbit ADC_RD = P3^2;  // Read Pin for ADC
  13          
  14          void delay(unsigned int ms) {
  15   1          unsigned int i, j;
  16   1          for(i = 0; i < ms; i++) {
  17   2              for(j = 0; j < 1275; j++);
  18   2          }
  19   1      }
  20          
  21          void lcd_cmd(unsigned char cmd) {
  22   1          P2 = cmd;
  23   1          RS = 0;
  24   1          RW = 0;
  25   1          EN = 1;
  26   1          delay(5);
  27   1          EN = 0;
  28   1      }
  29          
  30          void lcd_data(unsigned char data1) {
  31   1          P2 = data1;
  32   1          RS = 1;
  33   1          RW = 0;
  34   1          EN = 1;
  35   1          delay(5);
  36   1          EN = 0;
  37   1      }
  38          
  39          void lcd_init() {
  40   1          lcd_cmd(0x02); // Initialize LCD in 4-bit mode
  41   1          lcd_cmd(0x28); // Set 2-line, 5x7 font
  42   1          lcd_cmd(0x0C); // Display ON, Cursor OFF
  43   1          lcd_cmd(0x06); // Auto increment cursor
  44   1          lcd_cmd(0x01); // Clear display
  45   1          delay(5);
  46   1      }
  47          
  48          unsigned char read_adc() {
  49   1          unsigned char adc_value = 0;
  50   1          
  51   1          //ADC_CS = 0;      // Enable ADC
  52   1          ADC_WR = 0;      // Start conversion
  53   1          delay(1);
  54   1          ADC_WR = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              11/24/2024 01:58:04 PAGE 2   

  55   1          
  56   1          ADC_RD = 0;      // Read ADC result
  57   1          delay(1);
  58   1          adc_value = P1;  // Read ADC data from port P1
  59   1          ADC_RD = 1;      // End reading
  60   1          
  61   1         // ADC_CS = 1;      // Disable ADC
  62   1          
  63   1          return adc_value;
  64   1      }
  65          
  66          void main() {
  67   1          unsigned char adc_value;
  68   1          float temperature;
  69   1         int i;
  70   1          char display[10];
  71   1          
  72   1          lcd_init();      // Initialize the LCD
  73   1          
  74   1          while(1) {
  75   2              adc_value = read_adc();  // Read ADC value from LM35
  76   2              temperature = (adc_value * 5.0 / 255.0) * 100.0;  // Convert to temperature
  77   2              
  78   2              // Display temperature value on LCD
  79   2              sprintf(display, "Temp: %.2f C", temperature);
  80   2              
  81   2              lcd_cmd(0x80);  // Move cursor to the beginning of the first line
  82   2              for(i = 0; display[i] != '\0'; i++) {
  83   3                  lcd_data(display[i]);
  84   3              }
  85   2              
  86   2              delay(1000);  // Delay 1 second before updating
  87   2          }
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
